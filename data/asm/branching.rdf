<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dct="http://purl.org/dc/terms/">

    <!-- BRK -->

    <rdf:Description>
        <dct:identifier>001</dct:identifier>
        <dct:title xml:lang="fr-FR">Utiliser l'instruction BRK pour forcer l'arrêt du programme.</dct:title>
        <dct:description><![CDATA["ops":["ldx","brk"],"args":[{"value":"01","type":"v"}],"nblines":2,"footer":[{"label":"finish","value":"LDX #0x10","code":"A2 10","rts":false}],"valid":{"x":"01"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["L'instruction BRK s'utilise sans argument et permet de terminer l'exécution du programme.","","En remarquant que la ligne précompilée 'finish' modifie la valeur du registre X, cloturez le programme afin de ne pas exécuter cette dernière ligne, pour qu'au final le registre X contienne la valeur 0x01."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>002</dct:identifier>
        <dct:title xml:lang="fr-FR">Utiliser l'instruction BRK pour forcer l'arrêt du programme.</dct:title>
        <dct:description><![CDATA["ops":["ldx","stx"],"args":[{"value":"00","type":"v"},{"value":"02","type":"v"},{"value":"finish","type":"label"}],"nblines":3,"footer":[{"label":"finish","value":"LDX #0x10","code":"A2 10","rts":false}],"valid":{"x":"02"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Une fois compilée, l'instruction BRK vaut 0. En hackant le programme lui-même, trouvez un moyen pour qu'à la fin de l'exécution, le registre X vaille 0x02."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <!-- JMP -->

    <rdf:Description>
        <dct:identifier>101</dct:identifier>
        <dct:title xml:lang="fr-FR">Utiliser l'instruction JMP pour éviter une partie du code.</dct:title>
        <dct:description><![CDATA["class":"large","ops":["jmp","ldx"],"args":[{"value":"01","type":"v"},{"value":"finish","type":"label"}],"nblines":2,"footer":[{"label":"update","value":"LDX #0x10","code":"A2 10","rts":false},{"label":"finish","value":"BRK","code":"00","rts":false}],"valid":{"x":"01"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["L'instruction JMP permet d'affecter une valeur au registre PC. Pour rappel, ce registre sauve la position mémoire de la prochaine instruction à exécuter. Cela revient à dire qu'après l'instruction JMP, le programme continue à l'endroit spécifié par l'opérande.","","Chargez 0x01 dans le registre X et évitez la ligne 'update' en sautant directement vers la ligne 'finish'."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>


</rdf:RDF>

