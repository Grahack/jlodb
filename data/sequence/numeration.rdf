<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dct="http://purl.org/dc/terms/">


    <!-- PREFIX LIST
            2           : square 2d
            3           : square 3d
            b           : boxes
            c           : coins
            d           : distance
            dg          : digit
            di          : dice
            m           : matches
            o           : object (fruits)
            p           : potion
            po          : position
            s           : série de nombres à compléter
            u           : unité/dizaine/centaine
    -->

    <!-- DICE: di -->

    <rdf:Description>
        <dct:identifier>dima2</dct:identifier>
        <dct:title xml:lang="fr-FR">Associer un certain nombre d'allumettes à la valeur d'un dé (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"css":{"font-size":"5.0em","width":"3.0em"},"digit":1,"values":[["<div class='icon'><img src='res/img/matches/match11.svg'/></div>",1],["<div class='icon'><img src='res/img/matches/match21.svg'/></div>",2]]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"]],"class":"alpha", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>di6</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dima2</dct:identifier>
        <dct:title xml:lang="fr-FR">Associer un certain nombre d'allumettes à la valeur d'un dé (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"css":{"font-size":"3.0em","width":"3.2em"},"digit":1,"values":[["<div class='icon'><img src='res/img/matches/match11.svg'/></div>",1],["<div class='icon'><img src='res/img/matches/match21.svg'/></div>",2],["<div class='icon'><img src='res/img/matches/match31.svg'/></div>",3]]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>di6</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>diII</dct:identifier>
        <dct:title xml:lang="en-US"></dct:title>
        <dct:title xml:lang="fr-FR">Evaluer la valeur d'un dé (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"css":{"font-size":"5.0em","width":"3.0em"},"digit":1,"values":["1","2"]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"]],"class":"alpha", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>di6</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>diIII</dct:identifier>
        <dct:title xml:lang="en-US"></dct:title>
        <dct:title xml:lang="fr-FR">Evaluer la valeur d'un dé (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"css":{"font-size":"5.0em","width":"2.0em"},"digit":1,"values":["1","2","3"]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>di6</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>diVI</dct:identifier>
        <dct:title xml:lang="en-US"></dct:title>
        <dct:title xml:lang="fr-FR">Evaluer la valeur d'un dé (choisi entre 1 et 6), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"css":{"font-size":"4.0em","width":"1.2em"},"digit":1,"values":["1","2","3","4","5","6"]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"]],"class":"alpha","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>di6</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>di6</dct:identifier>
        <dct:title xml:lang="en-US"></dct:title>
        <dct:title xml:lang="fr-FR">Evaluer la valeur d'un dé (choisi entre 1 et 6) en utilisant le clavier numérique, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":3,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"} },"values":["1","2","3","4","5","6"],"class":"f30","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>di6</dct:alternative>
    </rdf:Description>

    <!-- DIGITS: dg -->

    <rdf:Description>
        <dct:identifier>dgdi2</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'un dé (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"css":{"font-size":"5.0em","width":"3.0em"},"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/lefthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2]]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"]],"class":"alpha p00","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgdi3</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'un dé (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"css":{"font-size":"5.0em","width":"2.0em"},"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/righthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand03.svg'/></div>",3]]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha p00","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgdi4</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'un dé (choisi entre 1 et 4), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"css":{"font-size":"5.0em","width":"1.5em"},"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/righthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand03.svg'/></div>",3],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand04.svg'/></div>",4]]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"dice\\\"><img src=\\\"res/img/generic/dice0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"],["4","4"]],"class":"alpha p00","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgnu2</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts un nombre (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"css":{"font-size":"5.0em","width":"3.0em"},"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/lefthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2]]},"template":"template.html","values":[["1","1"],["2","2"]],"class":"alpha", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgnu3</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts un nombre (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"css":{"font-size":"5.0em","width":"2.0em"},"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/righthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand03.svg'/></div>",3]]},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgca2</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'une carte (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"css":{"font-size":"5.0em","width":"3.0em"},"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/lefthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2]]},"regexp":{"input":{"from":"([1-9a-z]+)","to":"<div class=\\\"h10 w07\\\"><img src=\\\"res/img/cards/0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1hearts","1"],["2hearts","2"],["1clubs","1"],["2clubs","2"],["1spades","1"],["2spades","2"],["1diamonds","1"],["2diamonds","2"]],"class":"alpha wrong p00","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgca3</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'une carte (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"css":{"font-size":"5.0em","width":"2.0em"},"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/righthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand03.svg'/></div>",3]]},"regexp":{"input":{"from":"([1-9a-z]+)","to":"<div class=\\\"h10 w07\\\"><img src=\\\"res/img/cards/0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1hearts","1"],["1clubs","1"],["1spades","1"],["1diamonds","1"],["2hearts","2"],["2clubs","2"],["2spades","2"],["2diamonds","2"],["3hearts","3"],["3clubs","3"],["3spades","3"],["3diamonds","3"]],"class":"alpha wrong p00","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg02</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"css":{"font-size":"5.0em","width":"3.0em"},"digit":1,"values":[["1",1],["2",2]]},"regexp":{"input":{"from":"([0-9a-z]+)","to":"<div class=\\\"icon center\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"template":"template.html","values":[["righthand01","1"],["righthand02","2"],["lefthand01","1"],["lefthand02","2"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg03</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"css":{"font-size":"5.0em","width":"2.0em"},"digit":1,"values":[["1",1],["2",2],["3","3"]]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"icon center\\\"><img src=\\\"res/img/svginventoryicons/human/righthand0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg04</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 4), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/lefthand0$1.svg\\\"/></div>"}},"values":[["1","1"],["2","2"],["3","3"],["4","4"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg05</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 5), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/lefthand0$1.svg\\\"/></div>"}},"values":[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg06</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 6), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg07</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 7), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"],["lefthand05 righthand02","7"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg08</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 8), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"],["lefthand05 righthand02","7"],["lefthand05 righthand03","8"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg09</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 9), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"],["lefthand05 righthand02","7"],["lefthand05 righthand03","8"],["lefthand05 righthand04","9"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg10</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 10), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"],["lefthand05 righthand02","7"],["lefthand05 righthand03","8"],["lefthand05 righthand04","9"],["lefthand05 righthand05","10"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
    </rdf:Description>

    <!-- OBJECTS FROM 1 TO 10: o -->

    <rdf:Description>
        <dct:identifier>oII</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 2), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"css":{"font-size":"5.0em","width":"3.0em"},"digit":1,"values":[["1","1"],["2","2"]]},"template":"template.html","regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2]],"class":"wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>o5y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o2</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 2), en utilisant le clavier numérique, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2]],"class":"wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>o5y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>oIII</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 3), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"css":{"font-size":"5.0em","width":"2.0em"},"digit":1,"values":[["1","1"],["2","2"],["3","3"]]},"template":"template.html","regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3]],"len":5,"class":"wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>o5y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o3</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 3), en utilisant le clavier numérique, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3]],"len":5,"class":"wrong","font":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>o5y</dct:alternative>
    </rdf:Description>
 
    <rdf:Description>
        <dct:identifier>o4</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 4), en utilisant le clavier numérique, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3],["pepper01 pepper01 pepper01 pepper01",4],["apricot01 apricot01 apricot01 apricot01",4],["strawberry01 strawberry01 strawberry01 strawberry01",4],["pear01 pear01 pear01 pear01",4]],"len":7,"class":"wrong","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>o5y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o5</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 5), en utilisant le clavier numérique, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3],["pepper01 pepper01 pepper01 pepper01",4],["apricot01 apricot01 apricot01 apricot01",4],["strawberry01 strawberry01 strawberry01 strawberry01",4],["pear01 pear01 pear01 pear01",4],["pear01 pear01 pear01 pear01 pear01",5],["pepper02 pepper02 pepper02 pepper02 pepper02",5],["tomato01 tomato01 tomato01 tomato01 tomato01",5],["apple01 apple01 apple01 apple01 apple01",5]],"len":8,"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>o5y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o5x</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, en moins de 20 secondes, le nombre de fruits (entre 1 et 5), en utilisant le clavier numérique</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3],["pepper01 pepper01 pepper01 pepper01",4],["apricot01 apricot01 apricot01 apricot01",4],["strawberry01 strawberry01 strawberry01 strawberry01",4],["pear01 pear01 pear01 pear01",4],["pear01 pear01 pear01 pear01 pear01",5],["pepper02 pepper02 pepper02 pepper02 pepper02",5],["tomato01 tomato01 tomato01 tomato01 tomato01",5],["apple01 apple01 apple01 apple01 apple01",5]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>o5y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o5y</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, en moins de 12 secondes, le nombre de fruits (entre 1 et 5), en utilisant le clavier numérique</dct:title>
        <dct:description><![CDATA["time":0.6,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3],["pepper01 pepper01 pepper01 pepper01",4],["apricot01 apricot01 apricot01 apricot01",4],["strawberry01 strawberry01 strawberry01 strawberry01",4],["pear01 pear01 pear01 pear01",4],["pear01 pear01 pear01 pear01 pear01",5],["pepper02 pepper02 pepper02 pepper02 pepper02",5],["tomato01 tomato01 tomato01 tomato01 tomato01",5],["apple01 apple01 apple01 apple01 apple01",5]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>o5y</dct:alternative>
    </rdf:Description>


    <!-- COINS FROM 1 TO 10: c -->

    <rdf:Description>
        <dct:identifier>c2</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 2), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coin1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2]],"class":"wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c3</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 3), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coin1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3]],"class":"wrong","font":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c4</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 4), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coin1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4]],"class":"wrong","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c5</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 5), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coin1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c05</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 5), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coins$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["2",2],["1 1 1",3],["2 1",3],["1 2",3],["1 1 1 1",4],["2 1 1",4],["1 2 1",4],["1 1 2",4],["1 3",4],["3 1",4],["1 1 1 1 1",5],["2 1 1 1",5],["1 2 1 1",5],["1 1 2 1",5],["1 1 1 2",5],["3 2",5],["1 3 1",5],["2 3",5]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c06</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 6), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1",6]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c07</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 7), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1",7]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c08</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 8), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1",8]],"class":"wrong","font":1.3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c09</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 9), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["5 1 1 1 1",9]],"class":"wrong","font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c10</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 10), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10]],"class":"wrong","font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c11</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 11), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10],["A 1",11],["A 1",11]],"class":"wrong","font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c12</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 12), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10],["A 1",11],["A 1 1",12],["A 1 1",12]],"class":"wrong","font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c13</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 13), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10],["A 1",11],["A 1 1",12],["A 1 1 1",13],["A 1 1 1",13]],"class":"wrong","font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c14</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 14), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10],["A 1",11],["A 1 1",12],["A 1 1 1",13],["A 1 1 1 1",14],["A 1 1 1 1",14]],"class":"wrong","font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c15</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 15), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10],["A 1",11],["A 1 1",12],["A 1 1 1",13],["A 1 1 1 1",14],["A 1 1 1 1 1",15],["A 1 1 1 1 1",15]],"class":"wrong"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c20</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 20), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":2000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10],["A 1",11],["A 1 1",12],["A 1 1 1",13],["A 1 1 1 1",14],["A 1 1 1 1 1",15],["A 5 1",16],["A 5 1 1",17],["A 5 1 1 1",18],["A 5 1 1 1 1",19],["A A",20],["A A",20],["A A",20]],"class":"wrong","font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
    </rdf:Description>

    <!-- BOXES FROM 1 TO 10: b -->

    <rdf:Description>
        <dct:identifier>b2</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, sans contrainte de temps, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 2.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b2x</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 40 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 2.</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b2y</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 20 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 5.</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b3</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, sans contrainte de temps, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 3</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b3x</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 40 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 3</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b3y</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 20 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 3</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b4</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, sans contrainte de temps, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 4</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b4x</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 40 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 4</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b4y</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 20 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 4</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b5</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, sans contrainte de temps, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 5</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"],["51","6"],["15","6"],["52","7"],["25","7"],["53","8"],["35","8"],["54","9"],["45","9"],["55","10"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b5x</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 40 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 5</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"],["51","6"],["15","6"],["52","7"],["25","7"],["53","8"],["35","8"],["54","9"],["45","9"],["55","10"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b5y</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 20 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 5</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"],["51","6"],["15","6"],["52","7"],["25","7"],["53","8"],["35","8"],["54","9"],["45","9"],["55","10"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <!-- -->

    <rdf:Description>
        <dct:identifier>b15</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 15)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box$1.svg\\\"/></div>"} },"values":[["01",1],["02",2],["03",3],["04",4],["05",5],["06",6],["07",7],["08",8],["09",9],["10",10],["10 01",11],["10 02",12],["10 03",13],["10 04",14],["10 05",15]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b20</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 20)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box$1.svg\\\"/></div>"} },"values":[["01",1],["02",2],["03",3],["04",4],["05",5],["06",6],["07",7],["08",8],["09",9],["10",10],["10 01",11],["10 02",12],["10 03",13],["10 04",14],["10 05",15],["10 06",16],["10 07",17],["10 08",18],["10 09",19],["20",20]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b100</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 99)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*99)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b100x</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, en moins de 40 secondes, le nombre de cubes (entre 1 et 99)</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*99)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b200y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b100y</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, en moins de 20 secondes, le nombre de cubes (entre 1 et 99)</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":2,"speed":1000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*99)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>b200y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b200</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 199)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":3,"speed":1000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*199)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":1.6]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b200x</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, en moins de 40 secondes, le nombre de cubes (entre 1 et 199)</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":3,"speed":1000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*199)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":1.6]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>b200y</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b200y</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, en moins de 20 secondes, le nombre de cubes (entre 1 et 199)</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":3,"speed":1000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*199)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":1.6]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>b200y</dct:alternative>
    </rdf:Description>

    <!-- 2D boxes -->

    <rdf:Description>
        <dct:identifier>214</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, sans contrainte de temps, des carrés (de 1 à 4).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":500},"gen":"function(){var n=2,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>214x</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, en moins de 20 secondes, des carrés (de 1 à 4).</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":500},"gen":"function(){var n=2,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>219</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, sans contrainte de temps, des carrés (de 1 à 9).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":500},"gen":"function(){var n=3,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>219x</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, en moins de 30 secondes, des carrés (de 1 à 9).</dct:title>
        <dct:description><![CDATA["time":1.5,"input":{"digit":1,"speed":500},"gen":"function(){var n=3,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>2110</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, sans contrainte de temps, des carrés (de 1 à 10).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=4,b=[],val=Math.floor(Math.random()*10)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>2110x</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, en moins de 30 secondes, des carrés (de 1 à 10).</dct:title>
        <dct:description><![CDATA["time":1.5,"input":{"digit":2,"speed":1000},"gen":"function(){var n=4,b=[],val=Math.floor(Math.random()*10)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>2116</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, sans contrainte de temps, des carrés (de 1 à 16).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=4,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>2116x</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, en moins de 40 secondes, des carrés (de 1 à 16).</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":1000},"gen":"function(){var n=4,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

    <!-- 3D boxes -->

    <rdf:Description>
        <dct:identifier>341</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 4 sur une grille 2x2x1).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":500},"gen":"function(){var n=2,h=1,nb=Math.floor(Math.random()*4)+1,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":20]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>382</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 4 sur une grille 2x2x2).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":500},"gen":"function(){var n=2,h=2,nb=Math.floor(Math.random()*8)+1,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":20]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>391</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 9 sur une grille 3x3x1).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":500},"gen":"function(){var n=3,h=1,nb=Math.floor(Math.random()*9)+1,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":20]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3102</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 10 sur une grille 3x3x2).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=3,h=2,nb=Math.floor(Math.random()*10)+1,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":20]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3103</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 10 sur une grille 3x3x3).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=3,h=3,nb=Math.floor(Math.random()*10)+1,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":20]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3203</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 20 sur une grille 3x3x3).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=3,h=3,nb=Math.floor(Math.random()*20)+1,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":15]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3202</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 20 sur une grille 4x4x2).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=4,h=2,nb=Math.floor(Math.random()*20)+1,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":15]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>320b3</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 10 à 20 sur une grille 4x4x3).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=4,h=3,nb=Math.floor(Math.random()*11)+10,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":15]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3304</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 10 à 30 sur une grille 4x4x4).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=4,h=4,nb=Math.floor(Math.random()*21)+10,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":10]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3504</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 30 à 50 sur une grille 5x5x4).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var n=5,h=4,nb=Math.floor(Math.random()*21)+30,box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha p02 blank","font":5,"number":5]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>3203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
    </rdf:Description>

    <!-- Criteria - blue potion : p-->

    <rdf:Description>
        <dct:identifier>p122</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 2 sur 2) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["yellow01 blue02",1],["blue01 red01",1],["blue03 purple04",1],["red01 blue01",1],["blue01 yellow01",1],["white01 blue03",1],["blue04 blue01",2],["blue02 blue03",2],["blue01 blue01",2],["blue04 blue04",2],["blue01 blue02",2],["blue03 blue01",2]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p125</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 2 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["red01 blue01 red03 yellow03 red02",1],["orange02 purple02 red01 blue01 yellow01",1],["white01 blue03 green03 yellow03 red02",1],["green04 red01 purple02 blue04 blue01",2],["blue02 blue03 red02 purple01 yellow04",2],["green01 blue01 blue01 green01 green01",2]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p133</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 3 sur 3) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red03 yellow01",1],["orange01 yellow01 blue01",1],["white04 blue02 purple03",1],["green01 blue02 blue03",2],["purple02 blue04 blue03",2],["blue01 blue01 green01",2],["blue01 blue02 blue03",3],["blue03 blue03 blue03",3]],"class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p135</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 3 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red02 red03 red04 red01",1],["purple01 orange01 yellow01 green01 blue01",1],["white04 blue02 white03 white01 white04",1],["red04 green01 blue02 blue03 purple03",2],["red01 yellow03 purple02 blue04 blue03",2],["purple01 blue01 blue01 purple01 purple01",2],["yellow03 purple02 blue01 blue02 blue03",3],["yellow02 blue02 blue02 blue02 red02",3]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p144</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 4 sur 4) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 yellow02 yellow01 yellow01",1],["orange01 yellow01 red01 blue01",1],["white04 blue02 purple03 red04",1],["red04 blue02 blue01 red03",2],["red01 red03 blue04 blue01",2],["green01 blue01 blue01 green01",2],["yellow03 blue01 blue02 blue04",3],["yellow03 blue03 blue03 blue03",3],["blue04 blue03 blue02 blue01",4],["blue01 blue01 blue01 blue01",4],["blue04 blue03 blue04 blue01",4]],"class":"wrong gray","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p145</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 4 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red02 red03 yellow01 red01",1],["orange01 yellow01 red01 green01 blue01",1],["white04 blue02 purple03 yellow01 red04",1],["red04 red04 blue02 blue03 red04",2],["red01 yellow03 purple02 blue04 blue03",2],["green01 blue01 blue01 green01 green01",2],["yellow03 purple02 blue01 blue02 blue03",3],["yellow03 blue03 blue03 blue03 red03",3],["blue04 blue03 blue02 blue01 white03",4],["yellow01 blue01 blue01 blue01 blue01",4],["blue04 blue03 blue04 blue01 purple02 ",4]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p155</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 5 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red02 red03 yellow01 red01",1],["orange01 yellow01 red01 green01 blue01",1],["white04 blue02 purple03 yellow01 red04",1],["red04 green01 blue02 blue03 purple03",2],["red01 yellow03 purple02 blue04 blue03",2],["green01 blue01 blue01 green01 green01",2],["yellow03 purple02 blue01 blue02 blue03",3],["yellow03 blue03 blue03 blue03 red03",3],["blue04 blue03 blue02 blue01 white03",4],["yellow01 blue01 blue01 blue01 blue01",4],["blue04 blue03 blue04 blue01 purple02 ",4],["blue01 blue01 blue01 blue01 blue01",5],["blue02 blue01 blue03 blue04 blue01",5],["blue04 blue04 blue04 blue04 blue04",5]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p155x</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, en moins de 20 secondes, le nombre d'élèments (de 1 à 5 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red02 red03 yellow01 red01",1],["orange01 yellow01 red01 green01 blue01",1],["white04 blue02 purple03 yellow01 red04",1],["red04 green01 blue02 blue03 purple03",2],["red01 yellow03 purple02 blue04 blue03",2],["green01 blue01 blue01 green01 green01",2],["yellow03 purple02 blue01 blue02 blue03",3],["yellow03 blue03 blue03 blue03 red03",3],["blue04 blue03 blue02 blue01 white03",4],["yellow01 blue01 blue01 blue01 blue01",4],["blue04 blue03 blue04 blue01 purple02 ",4],["blue01 blue01 blue01 blue01 blue01",5],["blue02 blue01 blue03 blue04 blue01",5],["blue04 blue04 blue04 blue04 blue04",5]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p033</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 0 à 3 sur 3) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["white02 red04 green02",0],["orange01 red01 green01",0],["red03 red01 purple03",0],["blue01 red03 yellow01",1],["orange01 yellow01 blue01",1],["white04 blue02 purple03",1],["green01 blue02 blue03",2],["purple02 blue04 blue03",2],["blue01 blue01 green01",2],["blue01 blue02 blue03",3],["blue03 blue03 blue03",3]],"class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p055</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 0 à 5 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["white02 white03 red04 yellow01 green02",0],["orange01 red01 green01 yellow01 white01",0],["red03 purple04 yellow01 red01 purple03",0],["white02 white03 red04 yellow01 green02",0],["orange01 red01 green01 yellow01 white01",0],["red03 purple04 yellow01 red01 purple03",0],["red01 blue01 red03 yellow03 red02",1],["orange02 purple02 red01 blue01 yellow01",1],["white01 blue03 green03 yellow03 red02",1],["green04 red01 purple02 blue04 blue01",2],["blue02 blue03 red02 purple01 yellow04",2],["green01 blue01 blue01 green01 green01",2],["purple03 purple03 blue01 blue01 blue01",3],["blue01 blue01 blue01 yellow03 red03",3],["green04 blue04 blue04 blue04 green04",3],["blue04 blue03 blue02 blue01 green03",4],["red01 blue01 blue01 blue01 blue01",4],["white01 blue02 blue02 blue04 blue01",4],["blue03 blue03 blue04 blue02 blue02",5],["blue02 blue01 blue03 blue04 blue01",5],["blue04 blue04 blue04 blue04 blue04",5]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p033x</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, en moins de 20 secondes, un nombre d'élèments (de 0 à 3 sur 3) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["white02 red04 green02",0],["orange01 red01 green01",0],["red03 red01 purple03",0],["blue01 red03 yellow01",1],["orange01 yellow01 blue01",1],["white04 blue02 purple03",1],["green01 blue02 blue03",2],["purple02 blue04 blue03",2],["blue01 blue01 green01",2],["blue01 blue02 blue03",3],["blue03 blue03 blue03",3]],"class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m12</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 2) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/matches/match$1.svg\\\"/></div>"} },"values":[["01 12",1],["03 11",1],["14 03",1],["11",1],["13",1],["11 02",1],["11 11",2],["12 13",2],["21",2],["23",2],["01 24",2],["14 14",2]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m13</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 3) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/matches/match$1.svg\\\"/></div>"} },"values":[["01 12",1],["03 11",1],["14 03",1],["11",1],["13",1],["11 02",1],["11 11",2],["12 13",2],["21",2],["23",2],["01 24",2],["14 14",2],["22 12",3],["31 03",3],["24 13",3],["31",3],["14 23",3]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m14</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 4) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/matches/match$1.svg\\\"/></div>"} },"values":[["01 12",1],["14 03",1],["11",1],["13",1],["11 02",1],["12 13",2],["21",2],["23",2],["01 24",2],["14 14",2],["31 03",3],["24 13",3],["31",3],["14 23",3],["21 23",4],["32 14",4],["24 22",4],["22 23",4],["11 32",4]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m15</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 5) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/matches/match$1.svg\\\"/></div>"} },"values":[["14 03",1],["11",1],["13",1],["11 02",1],["12 13",2],["21",2],["01 24",2],["14 14",2],["31 03",3],["24 13",3],["14 23",3],["32 14",4],["24 22",4],["22 23",4],["11 32",4],["23 32",5],["31 22",5],["21 32",5],["24 31",5],["23 31",5],["32 21",5]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m02</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 0 à 2) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/matches/match$1.svg\\\"/></div>"} },"values":[["01 04",0],["02",0],["05",0],["03",0],["02 03",0],["01 12",1],["03 11",1],["11",1],["13",1],["11 02",1],["11 11",2],["12 13",2],["21",2],["23",2],["14 14",2]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>m15</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m02x</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, en moins de 20 secondes, un nombre d'élèments (de 0 à 2) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/matches/match$1.svg\\\"/></div>"} },"values":[["01 04",0],["02",0],["05",0],["03",0],["02 03",0],["01 12",1],["03 11",1],["11",1],["13",1],["11 02",1],["11 11",2],["12 13",2],["21",2],["23",2],["14 14",2]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
    </rdf:Description>

    <!-- Série -->

    <rdf:Description>
        <dct:identifier>s19l</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le dernier élément d'une série de nombres compris enre 1 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*5)+1,b=4; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s19f</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le premier élément d'une série de nombres compris enre 1 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*5)+1,b=0; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s19r</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, un élément d'une série de nombres compris enre 1 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*5)+1,b=Math.floor(Math.random()*5); for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s09l</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le dernier élément d'une série de nombres compris enre 0 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*6),b=4; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s09f</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le premier élément d'une série de nombres compris enre 0 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*6),b=0; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s09r</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, un élément d'une série de nombres compris enre 0 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*6),b=Math.floor(Math.random()*5); for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s019l</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le dernier élément d'une série de nombres compris enre 0 et 19.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*16),b=4; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s019f</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le premier élément d'une série de nombres compris enre 0 et 19.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*16),b=0; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s019r</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, un élément d'une série de nombres compris enre 0 et 19.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*16),b=Math.floor(Math.random()*5); for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s019rx</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, en moins de 20 secondes, un élément d'une série de nombres compris enre 0 et 19.</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":2,"speed":1000},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*16),b=Math.floor(Math.random()*5); for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <!-- Unité, dizaine, centaine: [UDC][0-9][a-c] -->


    <rdf:Description>
        <dct:identifier>uu20</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le chiffre des unités d'un nombre compris entre 0 et 20</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":1,"speed":0},"gen":"function() { var max=21,a=Math.floor(Math.random()*max); return [a, a%10]}","class":"alpha","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le chiffre des unités ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>D2b</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ud20</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le chiffre des dizaines d'un nombre compris entre 0 et 20</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":1,"values":["0","1","2"]},"template":"template2.html","gen":"function() { var max=21,a=Math.floor(Math.random()*max); return [a, Math.floor(a/10)]}","class":"alpha","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le chiffre des dizaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>D2b</dct:alternative>
    </rdf:Description>



    <!-- Position -->

    <rdf:Description>
        <dct:identifier>po010</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 10.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=2,correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=0,ball=Math.floor(Math.random()*11); for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='\\\"+(i%5==offset?2:3.5)+\\\"' x2='\\\"+(5+i*6)+\\\"' y2='\\\"+(i%5==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%5==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<2; i++) { ret+=\\\"<text x='\\\"+(i*60+offset*6+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*6)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po010x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 25 secondes, une abscisse entière comprise entre 0 et 10.</dct:title>
        <dct:description><![CDATA["time":1.25,"input":{"digit":2,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=2,correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=0,ball=Math.floor(Math.random()*11); for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='\\\"+(i%5==offset?2:3.5)+\\\"' x2='\\\"+(5+i*6)+\\\"' y2='\\\"+(i%5==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%5==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<2; i++) { ret+=\\\"<text x='\\\"+(i*60+offset*6+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*6)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po0100</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 100.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":2,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*8),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po0100x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre 0 et 100.</dct:title>
        <dct:description><![CDATA["time":2,"len":10,"input":{"digit":2,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*8),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po01000</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":3,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=2,first=Math.floor(Math.random()*8),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po01000x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["time":2,"len":10,"input":{"digit":3,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=2,first=Math.floor(Math.random()*8),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po1000</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":3,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=Math.floor(Math.random()*((stepid==1)?98:8)),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po1000x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre 0 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":2,"len":10,"input":{"digit":3,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=Math.floor(Math.random()*((stepid==1)?98:8)),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po10000</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 10000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":4,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*3)+1,first=Math.floor(Math.random()*((stepid==1)?998:((stepid==2)?98:8))),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po10000x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 50 secondes, une abscisse entière comprise entre 0 et 10000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":2.5,"len":10,"input":{"digit":4,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*3)+1,first=Math.floor(Math.random()*((stepid==1)?998:((stepid==2)?98:8))),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>po10000</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>pon010</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et -10.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypadneg","negative":true,"input":{"digit":2,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=2,correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=-1,ball=Math.floor(Math.random()*11); for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='\\\"+(i%5==offset?2:3.5)+\\\"' x2='\\\"+(5+i*6)+\\\"' y2='\\\"+(i%5==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%5==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<2; i++) { ret+=\\\"<text x='\\\"+(i*60+offset*6+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*6)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>pon1000</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>pon010x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 25 secondes, une abscisse entière comprise entre 0 et -10.</dct:title>
        <dct:description><![CDATA["time":1.25,"template":"keypadneg","negative":true,"input":{"digit":2,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=2,correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=-1,ball=Math.floor(Math.random()*11); for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='\\\"+(i%5==offset?2:3.5)+\\\"' x2='\\\"+(5+i*6)+\\\"' y2='\\\"+(i%5==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%5==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<2; i++) { ret+=\\\"<text x='\\\"+(i*60+offset*6+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*6)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>pon1000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon0100</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre -100 et 100.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypadneg","negative":true,"len":10,"input":{"digit":2,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>pon1000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon0100x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre -100 et 100.</dct:title>
        <dct:description><![CDATA["time":2,"template":"keypadneg","negative":true,"len":10,"input":{"digit":2,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>pon1000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon01000</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre -1000 et 1000.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypadneg","negative":true,"len":10,"input":{"digit":3,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=2,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>pon1000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon01000x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre -1000 et 1000.</dct:title>
        <dct:description><![CDATA["time":2,"template":"keypadneg","negative":true,"len":10,"input":{"digit":3,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=2,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>pon1000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon1000</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre -1000 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypadneg","negative":true,"len":10,"input":{"digit":3,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=(stepid==1)?Math.floor(Math.random()*198)-100:Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>pon1000</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon1000x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre -1000 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":2,"template":"keypadneg","negative":true,"len":10,"input":{"digit":3,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=(stepid==1)?Math.floor(Math.random()*198)-100:Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' font-family='Verdana' font-size='4'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>pon1000</dct:alternative>
    </rdf:Description>


    <!-- Distance -->

    <rdf:Description>
        <dct:identifier>d12</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 2, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=2, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.5\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d133</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 3 (sur 3 segments), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=3, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.6\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d13</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 3, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*3)+2, w=85/nb, val=Math.floor(Math.random()*(nb>3?3:nb))+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.6\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d144</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 4 (sur 4 segments), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=4, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.7\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d14</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 4, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*(nb>4?4:nb))+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.7\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d155</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 5 (sur 5 segments), sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=5, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d15</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 5, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d15x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 20 secondes, une distance comprise entre 1 et 5</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d03</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 0 et 3, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=3, w=85/nb, val=Math.floor(Math.random()*(nb+1)), offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d05</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 0 et 5, sans contrainte de temps</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*(nb+1)), offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d05x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 20 secondes, une distance comprise entre 0 et 5</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*(nb+1)), offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ro1</dct:identifier>
        <dct:title xml:lang="fr-FR">Convertir un nombre romain composé d'1 chiffre</dct:title>
        <dct:description><![CDATA["time":1,"len":4,"input":{"digit":1,"speed":1000},"gen":"function() { var roman=[[\\\"\\\", \\\"I\\\", \\\"II\\\", \\\"III\\\", \\\"IV\\\", \\\"V\\\", \\\"VI\\\", \\\"VII\\\", \\\"VIII\\\", \\\"IX\\\"]], val=[1+Math.floor(Math.random()*9)]; return([roman[0][val[0]], val[0]]); }"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>ro4</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ro2</dct:identifier>
        <dct:title xml:lang="fr-FR">Convertir un nombre romain composé de 2 chiffres</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":2000},"gen":"function() { var roman=[[\\\"\\\", \\\"I\\\", \\\"II\\\", \\\"III\\\", \\\"IV\\\", \\\"V\\\", \\\"VI\\\", \\\"VII\\\", \\\"VIII\\\", \\\"IX\\\"], [\\\"\\\", \\\"X\\\", \\\"XX\\\", \\\"XXX\\\", \\\"XL\\\", \\\"L\\\", \\\"LX\\\", \\\"LXX\\\", \\\"LXXX\\\", \\\"XC\\\"]], val=[Math.floor(Math.random()*10), Math.floor(Math.random()*10)], value=val[0]+val[1]*10; if (!value) { val[0]++; value++; } return([roman[1][val[1]]+roman[0][val[0]], value]); }"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ro4</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ro3</dct:identifier>
        <dct:title xml:lang="fr-FR">Convertir un nombre romain composé de 3 chiffres</dct:title>
        <dct:description><![CDATA["time":4,"input":{"digit":3,"speed":5000},"gen":"function() { var roman=[[\\\"\\\", \\\"I\\\", \\\"II\\\", \\\"III\\\", \\\"IV\\\", \\\"V\\\", \\\"VI\\\", \\\"VII\\\", \\\"VIII\\\", \\\"IX\\\"], [\\\"\\\", \\\"X\\\", \\\"XX\\\", \\\"XXX\\\", \\\"XL\\\", \\\"L\\\", \\\"LX\\\", \\\"LXX\\\", \\\"LXXX\\\", \\\"XC\\\"],[\\\"\\\", \\\"C\\\", \\\"CC\\\", \\\"CCC\\\", \\\"CD\\\", \\\"D\\\", \\\"DC\\\", \\\"DCC\\\", \\\"DCCC\\\", \\\"CM\\\"]], val=[Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*10)], value=val[0]+val[1]*10+val[2]*100; if (!value) { val[0]++; value++; } return([roman[2][val[2]]+roman[1][val[1]]+roman[0][val[0]], value]); }"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>ro4</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ro4</dct:identifier>
        <dct:title xml:lang="fr-FR">Convertir un nombre romain composé de 4 chiffres</dct:title>
        <dct:description><![CDATA["time":5,"input":{"digit":4,"speed":5000},"gen":"function() { var roman=[[\\\"\\\", \\\"I\\\", \\\"II\\\", \\\"III\\\", \\\"IV\\\", \\\"V\\\", \\\"VI\\\", \\\"VII\\\", \\\"VIII\\\", \\\"IX\\\"], [\\\"\\\", \\\"X\\\", \\\"XX\\\", \\\"XXX\\\", \\\"XL\\\", \\\"L\\\", \\\"LX\\\", \\\"LXX\\\", \\\"LXXX\\\", \\\"XC\\\"],[\\\"\\\", \\\"C\\\", \\\"CC\\\", \\\"CCC\\\", \\\"CD\\\", \\\"D\\\", \\\"DC\\\", \\\"DCC\\\", \\\"DCCC\\\", \\\"CM\\\"], [\\\"\\\", \\\"M\\\", \\\"MM\\\"]], val=[Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*3)], value=val[0]+val[1]*10+val[2]*100+val[3]*1000; if (!value) { val[0]++; value++; } return([roman[3][val[3]]+roman[2][val[2]]+roman[1][val[1]]+roman[0][val[0]], value]); }"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>ro4</dct:alternative>
    </rdf:Description>

</rdf:RDF>
