<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dct="http://purl.org/dc/terms/">


    <!-- PREFIX LIST
    -->

    <!-- FIGURE -->

    <rdf:Description>
        <dct:identifier>ft01</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les triangles.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){var a=Math.floor(Math.random()*2),ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>* {fill:#08F;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong * {stroke:red;fill:red;fill-opacity:0.5;}.good * {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*180)+\\\")'>\\\"; if (a==0) { ret+=\\\"<path d='M 0,-20 L \\\"+(3+Math.floor(Math.random()*20))+\\\",\\\"+(-5+Math.floor(Math.random()*20))+\\\" L  \\\"+(-18+Math.floor(Math.random()*8))+\\\",\\\"+(-10+Math.floor(Math.random()*12))+\\\" L 0,-20 z'/>\\\"; } else { if (Math.floor(Math.random()*2)) { var b=14+Math.floor(Math.random()*23),c=14+Math.floor(Math.random()*23); ret+=\\\"<rect x='\\\"+(-b/2)+\\\"' y='\\\"+(-c/2)+\\\"' width='\\\"+b+\\\"' height='\\\"+c+\\\"'/>\\\"; } else { ret+=\\\"<circle cx='0' cy='0' r='\\\"+(10+Math.floor(Math.random()*13))+\\\"'/>\\\"; }} ret+=\\\"</g></g></svg></div>\\\"; return [ret, a==0?1:0];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"1em","width":"2.5em"},"values":[["OUI",1],["NON",0]]},"comment":"La figure proposée est-elle un triangle ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ft02</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les triangles isocèles.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){var d2=function(x1,y1,x2,y2){ return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2); },a=Math.floor(Math.random()*2),ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>* {fill:#08F;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong * {stroke:red;fill:red;fill-opacity:0.5;}.good * {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*180)+\\\")'>\\\"; if (a==0) { var b,c; do { b=Math.floor(Math.random()*20+14); c=Math.floor(Math.random()*20+14); } while (Math.abs(c-b)<10 || c<b/1.5); var h=Math.sqrt(c*c-b*b/4); ret+=\\\"<path d='M 0,\\\"+(-h/2)+\\\" L \\\"+(b/2)+\\\",\\\"+(h/2)+\\\" L  \\\"+(-b/2)+\\\",\\\"+(h/2)+\\\" L 0,\\\"+(-h/2)+\\\" z'/>\\\"; }else {var x=[0,0,0],y=[0,0,0],good; do { for (var i=0; i<3; i++) {x[i]=Math.floor(Math.random()*36)-18; y[i]=Math.floor(Math.random()*36)-18; } good=true; for (var i=0;i<3;i++) { if (d2(x[i],y[i],x[(i+1)%3],y[(i+1)%3])<100) { good=false; } else if (Math.abs(d2(x[i],y[i],x[(i+1)%3],y[(i+1)%3])-d2(x[i],y[i],x[(i+2)%3],y[(i+2)%3]))<400) { good=false; } } } while(!good); ret+=\\\"<path d='M \\\"+x[0]+\\\",\\\"+y[0]+\\\" L \\\"+x[1]+\\\",\\\"+y[1]+\\\" L  \\\"+x[2]+\\\",\\\"+y[2]+\\\" L \\\"+x[0]+\\\",\\\"+y[0]+\\\" z'/>\\\"; } ret+=\\\"</g></g></svg></div>\\\"; return [ret, a==0?1:0];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"1em","width":"2.5em"},"values":[["OUI",1],["NON",0]]},"comment":"Le triangle est-il isocèle ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>fc01</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les cercles.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){var a=Math.floor(Math.random()*2),ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>* {fill:#08F;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong * {stroke:red;fill:red;fill-opacity:0.5;}.good * {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*180)+\\\")'>\\\"; if (a==0) { ret+=\\\"<circle cx='0' cy='0' r='\\\"+(10+Math.floor(Math.random()*13))+\\\"'/>\\\"; } else { if (Math.floor(Math.random()*2)) { var b=14+Math.floor(Math.random()*23),c=14+Math.floor(Math.random()*23); ret+=\\\"<rect x='\\\"+(-b/2)+\\\"' y='\\\"+(-c/2)+\\\"' width='\\\"+b+\\\"' height='\\\"+c+\\\"'/>\\\"; } else { ret+=\\\"<path d='M 0,-20 L \\\"+(3+Math.floor(Math.random()*20))+\\\",\\\"+(-5+Math.floor(Math.random()*20))+\\\" L  \\\"+(-18+Math.floor(Math.random()*8))+\\\",\\\"+(-10+Math.floor(Math.random()*12))+\\\" L 0,-20 z'/>\\\"; }} ret+=\\\"</g></g></svg></div>\\\"; return [ret, a==0?1:0];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"1em","width":"2.5em"},"values":[["OUI",1],["NON",0]]},"comment":"La figure proposée est-elle un cercle ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>fs01</dct:identifier>
        <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, un carré d'un rectangle (sans rotation).</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.floor(Math.random()*2),w=5*(Math.floor(Math.random()*7)+1), h=w; if (a) { do { h=5*(Math.floor(Math.random()*7)+1); } while(h==w); } var ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(0)'><rect x='\\\"+(-w/2)+\\\"' y='\\\"+(-h/2)+\\\"' width='\\\"+w+\\\"' height='\\\"+h+\\\"'/></g></g></svg></div>\\\"; return [ret, a];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"2.5em","width":"6.0em"},"values":[["Carré",0],["Rectangle",1]]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>fs02</dct:identifier>
        <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, un carré d'un rectangle (avec rotation).</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.floor(Math.random()*2),w=5*(Math.floor(Math.random()*6)+1), h=w; if (a) { do { h=5*(Math.floor(Math.random()*6)+1); } while(h==w); } var ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*90)+\\\")'><rect x='\\\"+(-w/2)+\\\"' y='\\\"+(-h/2)+\\\"' width='\\\"+w+\\\"' height='\\\"+h+\\\"'/></g></g></svg></div>\\\"; return [ret, a];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"2.5em","width":"6.0em"},"values":[["Carré",0],["Rectangle",1]]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>fs03</dct:identifier>
        <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, un carré d'un rectangle (avec rotation).</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.floor(Math.random()*2),x1=30+Math.random()*10,x2=10+Math.random()*10,x3; if (a) { x3=x2+5+Math.random()*(x1-x2-5);} else { x3=8+Math.random()*(x2-14); } var ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:#08F;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong path {stroke:red;fill:red;fill-opacity:0.5;}.good path {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*90)+\\\")'><path d='M \\\"+(x1-24)+\\\",-8 L \\\"+(x3-24)+\\\",\\\"+(-16+Math.random()*4)+\\\" L \\\"+(x2-24)+\\\",\\\"+(-8+Math.random()*16)+\\\" L \\\"+(x3-24)+\\\",\\\"+(12+Math.random()*4)+\\\" L \\\"+(x1-24)+\\\",-8 z'/></g></g></svg></div>\\\"; return [ret, a];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"2.5em","width":"6.0em"},"values":[["Concave",0],["Convexe",1]]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

    <!-- LINES, SEGMENT, LENGTH -->

    <rdf:Description>
        <dct:identifier>l01</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les segments de même longueur parmi 5 segments.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypad.html","number":15,"gen":"function(){var r=0,n=5,pos=Math.floor(Math.random()*n),l=Math.floor(Math.random()*20)+24, ret=\\\"<div style='width:1em;height=1em;margin:0.05em;'><svg width='90%' height='90%' viewBox='0 0 48 48'><def><style>rect {fill:cyan;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}line {stroke:black;stroke-width:1;}</style></def><rect x='0' y='0' width='48' height='48'/>\\\"; for (var i=0; i<n;i++) { var x1,x2,y=(6+i*(36/(n-1))),c=Math.random(),style=\\\"\\\"; if (i==pos) { style=\\\" style='stroke:#800;'\\\"; } if ((i==pos)||(c<0.5)) { x1=(48-l)/2; x2=x1+l;r++;} else { var l2; do { l2=Math.floor(Math.random()*20)+24; } while (Math.abs(l-l2)<10); if (Math.random()<0.5) { x1=(48-l)/2; x2=x1+l2; } else { x2=(48+l)/2;x1=x2-l2;} if (x1<0 || x2>48) { x1=(48-l2)/2; x2=x1+l2; } } ret+=\\\"<line x1='\\\"+x1+\\\"' y1='\\\"+y+\\\"' x2='\\\"+x2+\\\"' y2='\\\"+y+\\\"'\\\"+style+\\\"/>\\\"; } ret+=\\\"</svg></div>\\\"; return [ret, r-1];}","class":"alpha blank","font":5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"speed":1000},"comment":"Combien de segments sont de <b>même longueur</b> que le <b>segment rouge</b> ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>lp01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>l02</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les segments de même longueur parmi 10 segments.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypad.html","number":10,"gen":"function(){var r=0,n=10,pos=Math.floor(Math.random()*n),l=Math.floor(Math.random()*20)+24, ret=\\\"<div style='width:1em;height=1em;margin:0.05em;'><svg width='90%' height='90%' viewBox='0 0 48 48'><def><style>rect {fill:cyan;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}line {stroke:black;stroke-width:0.5;}</style></def><rect x='0' y='0' width='48' height='48'/>\\\"; for (var i=0; i<n;i++) { var x1,x2,y=(6+i*(36/(n-1))),c=Math.random(),style=\\\"\\\"; if (i==pos) { style=\\\" style='stroke:#800;'\\\"; } if ((i==pos)||(c<0.3)) { x1=(48-l)/2; x2=x1+l;r++;} else { var l2; do { l2=Math.floor(Math.random()*20)+24; } while (Math.abs(l-l2)<10); if (Math.random()<0.5) { x1=(48-l)/2; x2=x1+l2; } else { x2=(48+l)/2;x1=x2-l2;} if (x1<0 || x2>48) { x1=(48-l2)/2; x2=x1+l2; } } ret+=\\\"<line x1='\\\"+x1+\\\"' y1='\\\"+y+\\\"' x2='\\\"+x2+\\\"' y2='\\\"+y+\\\"'\\\"+style+\\\"/>\\\"; } ret+=\\\"</svg></div>\\\"; return [ret, r-1];}","class":"alpha blank","font":5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"speed":1000},"comment":"Combien de segments sont de <b>même longueur</b> que le <b>segment rouge</b> ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>lp01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>lp01</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, deux droites parallèles.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.random()*Math.PI,ax=Math.random()*20+62,ay=Math.random()*20+14,r=Math.floor(Math.random()*2),b=a,bx=Math.random()*20+62,by=Math.random()*20+14; if (r) { do { by=Math.random()*20+14; bx=Math.random()*20+62; } while(Math.abs(by-ay)<5 || Math.abs(bx-ax)<5); } else { do { b=Math.random()*Math.PI; }while(Math.abs(b-a)<Math.PI/10); } var ret=\\\"<div style='width:3em;height=1em;margin-left:.2em;'><svg width='100%' height='100%' viewBox='0 0 144 48'><def><style>rect {fill-opacity:0;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}line {stroke:black;stroke-width:1;}</style></def><line x1='\\\"+(ax+200*Math.cos(a))+\\\"' y1='\\\"+(ay+200*Math.sin(a))+\\\"' x2='\\\"+(ax-200*Math.cos(a))+\\\"' y2='\\\"+(ay-200*Math.sin(a))+\\\"'/><line x1='\\\"+(bx+200*Math.cos(b))+\\\"' y1='\\\"+(by+200*Math.sin(b))+\\\"' x2='\\\"+(bx-200*Math.cos(b))+\\\"' y2='\\\"+(by-200*Math.sin(b))+\\\"'/><rect x='0' y='0' width='144' height='48'/></svg></div>\\\"; return [ret, r];}","class":"alpha p02 blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"5em","width":"3em"},"values":[["OUI",1],["NON",0]]},"comment":"Les deux droites sont-elles <b>parallèles</b> ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>lp01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>lp51</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, deux droites prependiculaires.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.random()*Math.PI,ax=Math.random()*20+62,ay=Math.random()*20+14,r=Math.floor(Math.random()*2),b=(a+Math.PI/2)%Math.PI,bx=Math.random()*20+62,by=Math.random()*20+14; if (!r) { do { b=Math.random()*Math.PI; }while(Math.abs(b-a)>Math.PI/3); } var ret=\\\"<div style='width:3em;height=1em;margin-left:.2em;'><svg width='100%' height='100%' viewBox='0 0 144 48'><def><style>rect {fill-opacity:0;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}line {stroke:black;stroke-width:1;}</style></def><line x1='\\\"+(ax+200*Math.cos(a))+\\\"' y1='\\\"+(ay+200*Math.sin(a))+\\\"' x2='\\\"+(ax-200*Math.cos(a))+\\\"' y2='\\\"+(ay-200*Math.sin(a))+\\\"'/><line x1='\\\"+(bx+200*Math.cos(b))+\\\"' y1='\\\"+(by+200*Math.sin(b))+\\\"' x2='\\\"+(bx-200*Math.cos(b))+\\\"' y2='\\\"+(by-200*Math.sin(b))+\\\"'/><rect x='0' y='0' width='144' height='48'/></svg></div>\\\"; return [ret, r];}","class":"alpha p02 blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"5em","width":"3em"},"values":[["OUI",1],["NON",0]]},"comment":"Les deux droites sont-elles <b>perpendiculaires</b> ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>lp01</dct:alternative>
    </rdf:Description>
</rdf:RDF>
