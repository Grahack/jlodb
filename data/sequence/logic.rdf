<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dct="http://purl.org/dc/terms/">

    <rdf:Description>
        <dct:identifier>001a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la disjonction logique de 2 nombres binaires codés sur 2 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":2,"speed":2000},"template":"keypad2.html","gen":"function() { var n=2, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), cc = (a|b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+\\\" ∨ \\\"+bb, cc ]}","font":2,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>002a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la disjonction logique de 2 nombres binaires codés sur 3 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":3,"speed":2000},"template":"keypad2.html","gen":"function() { var n=3, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), cc = (a|b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+\\\" ∨ \\\"+bb, cc ]}","font":1.5,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>003a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la disjonction logique de 2 nombres binaires codés sur 4 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":4,"speed":2000},"template":"keypad2.html","gen":"function() { var n=4, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), cc = (a|b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+\\\" ∨ \\\"+bb, cc ]}","font":1,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>011a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la conjonction logique de 2 nombres binaires codés sur 2 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":2,"speed":2000},"template":"keypad2.html","gen":"function() { var n=2, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), cc = (a&b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+\\\" ∧ \\\"+bb, cc ]}","font":2,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>012a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la conjonction logique de 2 nombres binaires codés sur 3 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":3,"speed":2000},"template":"keypad2.html","gen":"function() { var n=3, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), cc = (a&b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+\\\" ∧ \\\"+bb, cc ]}","font":1.5,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>013a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la conjonction logique de 2 nombres binaires codés sur 4 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":4,"speed":2000},"template":"keypad2.html","gen":"function() { var n=4, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), cc = (a&b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+\\\" ∧ \\\"+bb, cc ]}","font":1,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>021a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la conjonction ou la disjonction logique de 2 nombres binaires codés sur 2 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":2,"speed":2000},"template":"keypad2.html","gen":"function() { var n=2, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), q = Math.random()*2; cc = q>1?(a&b).toString(2):(a|b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+(q>1?\\\" ∧ \\\":\\\" ∨ \\\")+bb, cc ]}","font":2,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>022a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la conjonction ou la disjonction logique de 2 nombres binaires codés sur 3 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":3,"speed":2000},"template":"keypad2.html","gen":"function() { var n=3, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), q = Math.random()*2; cc = q>1?(a&b).toString(2):(a|b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+(q>1?\\\" ∧ \\\":\\\" ∨ \\\")+bb, cc ]}","font":1.5,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>023a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la conjonction ou la disjonction logique de 2 nombres binaires codés sur 4 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":4,"speed":2000},"template":"keypad2.html","gen":"function() { var n=4, a=Math.floor(Math.random()*Math.pow(2,n)), b = Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), bb = b.toString(2), q = Math.random()*2; cc = q>1?(a&b).toString(2):(a|b).toString(2); while (cc.length<n) { cc = \\\"0\\\"+cc; } while(aa.length<n) { aa = \\\"0\\\"+aa; } while(bb.length<n)  { bb = \\\"0\\\"+bb; } return [aa+(q>1?\\\" ∧ \\\":\\\" ∨ \\\")+bb, cc ]}","font":1,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>031a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la négation logique d'un nombre binaire codé sur 2 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":2,"speed":2000},"template":"keypad2.html","gen":"function() { var n=2, a=Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), cc = \\\"\\\"; while(aa.length<n) { aa = \\\"0\\\"+aa; } for (var i=0; i<n; i++)  { cc += (aa[i]=='0'?'1':'0'); } return [\\\"¬\\\"+aa, cc ]}","font":2,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>032a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la négation logique d'un nombre binaire codé sur 3 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":3,"speed":2000},"template":"keypad2.html","gen":"function() { var n=3, a=Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), cc = \\\"\\\"; while(aa.length<n) { aa = \\\"0\\\"+aa; } for (var i=0; i<n; i++)  { cc += (aa[i]=='0'?'1':'0'); } return [\\\"¬\\\"+aa, cc ]}","font":2,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>033a</dct:identifier>
        <dct:title xml:lang="fr-FR">Résoudre, sans contrainte de temps, la négation logique d'un nombre binaire codé sur 4 bits.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":4,"speed":2000},"template":"keypad2.html","gen":"function() { var n=4, a=Math.floor(Math.random()*Math.pow(2,n)), aa = a.toString(2), cc = \\\"\\\"; while(aa.length<n) { aa = \\\"0\\\"+aa; } for (var i=0; i<n; i++)  { cc += (aa[i]=='0'?'1':'0'); } return [\\\"¬\\\"+aa, cc ]}","font":2,"strict":true]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>operations</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1</dct:alternative>
    </rdf:Description>

</rdf:RDF>


